import type { Color } from "chess.js";
import type { GameType, Outcome } from "./chess";
import type { User } from "./entity";
import type { WSCommand } from "@socketinator/sdk/server";
import { w } from "node_modules/react-router/dist/development/context-DSyS5mLj.mjs";

export type ErrorCommand = WSCommand<"error", { message: string }>;

export type CommonChessCommands =
  | WSCommand<"draw-offer", { gameId: string }>
  | WSCommand<"draw-response", { response: boolean; gameId: string }>
  | WSCommand<"resign", { gameId: string }>
  | WSCommand<"message", { content: string; gameId: string }>;

type ChessClientCommands =
  | CommonChessCommands
  | WSCommand<"move", { move: string; gameId: string }>;

export type ClientsCommands = ChessClientCommands;

export type ChessServerCommands =
  | CommonChessCommands
  | WSCommand<"end", { winner: User["id"] | null; outcome: Outcome }>
  | WSCommand<"disconnection", null>
  | WSCommand<"reconnection", null>
  | WSCommand<"move", { move: string; timers: Record<Color, number> }>
  | WSCommand<"start", { opponent: User; color: Color; gameId: string }>
  | ErrorCommand;

export type CommonHubCommand =
  | WSCommand<"quit-transfert", {}>
  | WSCommand<"challenge-response", { challengId: string; response: boolean }>;

export type HubClientCommands =
  | CommonHubCommand
  | WSCommand<"join", { gameType: GameType }>
  | WSCommand<
      "challenge",
      { challengeId: string; gameType: GameType; userId: User["id"] }
    >
  | WSCommand<"cancel-challenge", { userId: User["id"]; gameType: GameType }>
  | WSCommand<"request-challenges", {}>;

export type HubServerCommands =
  | CommonHubCommand
  | WSCommand<
      "active-challenges",
      { challenges: { user: User; gameType: GameType }[] }
    >
  | WSCommand<
      "new-challenges",
      { challenges: { user: User; gameType: GameType } }
    >
  | WSCommand<"", { challenges: { user: User; gameType: GameType } }>;

export type ServerEnvelopes = { userId: User["id"] } & (
  | {
      group: "chess";
      command: ChessServerCommands;
    }
  | {
      group: "hub";
      command: CommonHubCommand | ErrorCommand;
    }
);

export type ClientsEnvelopes =
  | {
      group: "chess";
      command: ChessClientCommands;
    }
  | {
      group: "hub";
      command: HubClientCommands;
    };
